/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.24).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Comercial;
import io.swagger.model.ListaComerciales;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-01-27T22:09:33.361636800+01:00[Europe/Paris]")
public interface MerchantsApi {

    @Operation(summary = "Crea un comercial.", description = "", tags={ "Comerciales" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "Nuevo comercial creado"),
        
        @ApiResponse(responseCode = "400", description = "Entrada invalida") })
    @RequestMapping(value = "/merchants",
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> addMerchant(@Parameter(in = ParameterIn.DEFAULT, description = "", schema=@Schema()) @Valid @RequestBody Comercial body);


    @Operation(summary = "Devuelve la informacion de todos los comerciales", description = "Devuelve la infomacion de todos los comerciales.", tags={ "Comerciales" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Operacion completada.", content = @Content(schema = @Schema(implementation = ListaComerciales.class))),
        
        @ApiResponse(responseCode = "403", description = "No tienes permisos para ver este contenido.") })
    @RequestMapping(value = "/merchants",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ListaComerciales> getMerchants();

}

